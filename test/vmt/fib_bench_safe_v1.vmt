(set-info :source |printed by MathSAT|)
(declare-fun t1.k () Int)
(declare-fun t2.k () Int)
(declare-fun t2.j.next () Int)
(declare-fun t1.k.next () Int)
(declare-fun t2.j () Int)
(declare-fun t1.i () Int)
(declare-fun t2.EVENT.0 () Bool)
(declare-fun t2.k.next () Int)
(declare-fun t1.EVENT.0 () Bool)
(declare-fun t1.i.next () Int)
(define-fun .def_19 () Int (! t1.i :next t1.i.next))
(define-fun .def_20 () Bool (= .def_19 1))
(define-fun .def_16 () Int (! t1.k :next t1.k.next))
(define-fun .def_17 () Bool (= .def_16 0))
(define-fun .def_12 () Int (! t2.j :next t2.j.next))
(define-fun .def_14 () Bool (= .def_12 1))
(define-fun .def_9 () Int (! t2.k :next t2.k.next))
(define-fun .def_11 () Bool (= .def_9 0))
(define-fun .def_15 () Bool (and .def_11 .def_14))
(define-fun .def_18 () Bool (and .def_15 .def_17))
(define-fun .def_21 () Bool (! (and .def_18 .def_20) :init true))
(define-fun .def_62 () Bool (<= 5 .def_16))
(define-fun .def_74 () Bool (not .def_62))
(define-fun .def_71 () Bool (= .def_19 t1.i.next))
(define-fun .def_70 () Bool (= .def_16 t1.k.next))
(define-fun .def_72 () Bool (and .def_70 .def_71))
(define-fun .def_75 () Bool (or .def_72 .def_74))
(define-fun .def_65 () Bool (not t1.EVENT.0))
(define-fun .def_76 () Bool (or .def_65 .def_75))
(define-fun .def_73 () Bool (or t1.EVENT.0 .def_72))
(define-fun .def_77 () Bool (and .def_73 .def_76))
(define-fun .def_32 () Bool (not t2.EVENT.0))
(define-fun .def_68 () Bool (or .def_32 .def_65))
(define-fun .def_55 () Int (* (- 1) t1.i.next))
(define-fun .def_58 () Int (+ .def_19 .def_55))
(define-fun .def_59 () Int (+ .def_12 .def_58))
(define-fun .def_60 () Bool (= .def_59 0))
(define-fun .def_51 () Int (* (- 1) t1.k.next))
(define-fun .def_52 () Int (+ .def_16 .def_51))
(define-fun .def_53 () Bool (= .def_52 (- 1)))
(define-fun .def_61 () Bool (and .def_53 .def_60))
(define-fun .def_63 () Bool (or .def_61 .def_62))
(define-fun .def_66 () Bool (or .def_63 .def_65))
(define-fun .def_28 () Bool (= .def_12 t2.j.next))
(define-fun .def_26 () Bool (= .def_9 t2.k.next))
(define-fun .def_29 () Bool (and .def_26 .def_28))
(define-fun .def_48 () Bool (or .def_29 t2.EVENT.0))
(define-fun .def_38 () Int (* (- 1) t2.j.next))
(define-fun .def_41 () Int (+ .def_19 .def_38))
(define-fun .def_42 () Int (+ .def_12 .def_41))
(define-fun .def_43 () Bool (= .def_42 0))
(define-fun .def_35 () Int (* (- 1) t2.k.next))
(define-fun .def_36 () Int (+ .def_9 .def_35))
(define-fun .def_37 () Bool (= .def_36 (- 1)))
(define-fun .def_44 () Bool (and .def_37 .def_43))
(define-fun .def_23 () Bool (<= 5 .def_9))
(define-fun .def_45 () Bool (or .def_23 .def_44))
(define-fun .def_46 () Bool (or .def_32 .def_45))
(define-fun .def_24 () Bool (not .def_23))
(define-fun .def_30 () Bool (or .def_24 .def_29))
(define-fun .def_33 () Bool (or .def_30 .def_32))
(define-fun .def_47 () Bool (and .def_33 .def_46))
(define-fun .def_49 () Bool (and .def_47 .def_48))
(define-fun .def_67 () Bool (and .def_49 .def_66))
(define-fun .def_69 () Bool (and .def_67 .def_68))
(define-fun .def_78 () Bool (! (and .def_69 .def_77) :trans true))
(define-fun .def_82 () Bool (<= .def_19 144))
(define-fun .def_83 () Bool (not .def_82))
(define-fun .def_80 () Bool (<= .def_12 144))
(define-fun .def_81 () Bool (not .def_80))
(define-fun .def_84 () Bool (or .def_81 .def_83))
(define-fun .def_85 () Bool (! (not .def_84) :invar-property 0))
(assert true)
