
    -- ===============================================================================
    MODULE main
        VAR
            MonitorSystem_inst : MonitorSystem(power, electrical_pedal_pos_L, electrical_pedal_pos_R, ground_speed, wheel_rolling_1, wheel_rolling_2, wheel_rolling_3, wheel_rolling_4, wheel_rolling_5, wheel_rolling_6, wheel_rolling_7, wheel_rolling_8, brake_as_cmd_1, brake_as_cmd_2, brake_as_cmd_3, brake_as_cmd_4, brake_as_cmd_5, brake_as_cmd_6, brake_as_cmd_7, brake_as_cmd_8, as_cmd_pair_1_5, as_cmd_pair_2_6, as_cmd_pair_3_7, as_cmd_pair_4_8);
        VAR
            power : boolean;
            electrical_pedal_pos_L : boolean;
            electrical_pedal_pos_R : boolean;
            ground_speed : {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
            wheel_rolling_1 : boolean;
            wheel_rolling_2 : boolean;
            wheel_rolling_3 : boolean;
            wheel_rolling_4 : boolean;
            wheel_rolling_5 : boolean;
            wheel_rolling_6 : boolean;
            wheel_rolling_7 : boolean;
            wheel_rolling_8 : boolean;
            brake_as_cmd_1 : boolean;
            brake_as_cmd_2 : boolean;
            brake_as_cmd_3 : boolean;
            brake_as_cmd_4 : boolean;
            brake_as_cmd_5 : boolean;
            brake_as_cmd_6 : boolean;
            brake_as_cmd_7 : boolean;
            brake_as_cmd_8 : boolean;
            as_cmd_pair_1_5 : boolean;
            as_cmd_pair_2_6 : boolean;
            as_cmd_pair_3_7 : boolean;
            as_cmd_pair_4_8 : boolean;
        DEFINE
            bscu_validity := MonitorSystem_inst.bscu_validity;

    -- ===============================================================================
    --                               End of module
    -- ===============================================================================

    -- ===============================================================================
    MODULE MonitorSystem(power, electrical_pedal_pos_L, electrical_pedal_pos_R, ground_speed, wheel_rolling_1, wheel_rolling_2, wheel_rolling_3, wheel_rolling_4, wheel_rolling_5, wheel_rolling_6, wheel_rolling_7, wheel_rolling_8, brake_as_cmd_1, brake_as_cmd_2, brake_as_cmd_3, brake_as_cmd_4, brake_as_cmd_5, brake_as_cmd_6, brake_as_cmd_7, brake_as_cmd_8, as_cmd_pair_1_5, as_cmd_pair_2_6, as_cmd_pair_3_7, as_cmd_pair_4_8)
        VAR
            bscu_validity : boolean;
            LTLSPEC NAME bscu_validity_norm_guarantee := (TRUE ->  G (bscu_validity <-> ((((((((((((power & ((electrical_pedal_pos_L & ((ground_speed > 0 & wheel_rolling_1) | ground_speed = 0)) <-> brake_as_cmd_1)) & ((electrical_pedal_pos_L & ((ground_speed > 0 & wheel_rolling_2) | ground_speed = 0)) <-> brake_as_cmd_2)) & ((electrical_pedal_pos_R & ((ground_speed > 0 & wheel_rolling_3) | ground_speed = 0)) <-> brake_as_cmd_3)) & ((electrical_pedal_pos_R & ((ground_speed > 0 & wheel_rolling_4) | ground_speed = 0)) <-> brake_as_cmd_4)) & ((electrical_pedal_pos_L & ((ground_speed > 0 & wheel_rolling_5) | ground_speed = 0)) <-> brake_as_cmd_5)) & ((electrical_pedal_pos_L & ((ground_speed > 0 & wheel_rolling_6) | ground_speed = 0)) <-> brake_as_cmd_6)) & ((electrical_pedal_pos_R & ((ground_speed > 0 & wheel_rolling_7) | ground_speed = 0)) <-> brake_as_cmd_7)) & ((electrical_pedal_pos_R & ((ground_speed > 0 & wheel_rolling_8) | ground_speed = 0)) <-> brake_as_cmd_8)) & ((ground_speed > 0 & (!wheel_rolling_1 | !wheel_rolling_5)) <-> as_cmd_pair_1_5)) & ((ground_speed > 0 & (!wheel_rolling_2 | !wheel_rolling_6)) <-> as_cmd_pair_2_6)) & ((ground_speed > 0 & (!wheel_rolling_3 | !wheel_rolling_7)) <-> as_cmd_pair_3_7)) & ((ground_speed > 0 & (!wheel_rolling_4 | !wheel_rolling_8)) <-> as_cmd_pair_4_8))));

        DEFINE
        	as_cmd_pair_1_5_valid:= ((ground_speed>0 & (!wheel_rolling_1 | !wheel_rolling_5)) <-> as_cmd_pair_1_5);
        	as_cmd_pair_2_6_valid:= ((ground_speed>0 & (!wheel_rolling_2 | !wheel_rolling_6)) <-> as_cmd_pair_2_6);
        	as_cmd_pair_3_7_valid:= ((ground_speed>0 & (!wheel_rolling_3 | !wheel_rolling_7)) <-> as_cmd_pair_3_7);
        	as_cmd_pair_4_8_valid:= ((ground_speed>0 & (!wheel_rolling_4 | !wheel_rolling_8)) <-> as_cmd_pair_4_8);
        	brake_as_cmd_1_valid:= (( electrical_pedal_pos_L & ((ground_speed>0 & wheel_rolling_1) | ground_speed=0)) <-> brake_as_cmd_1);
        	brake_as_cmd_2_valid:= (( electrical_pedal_pos_L & ((ground_speed>0 & wheel_rolling_2) | ground_speed=0)) <-> brake_as_cmd_2);
        	brake_as_cmd_3_valid:= (( electrical_pedal_pos_R & ((ground_speed>0 & wheel_rolling_3) | ground_speed=0)) <-> brake_as_cmd_3);
        	brake_as_cmd_4_valid:= (( electrical_pedal_pos_R & ((ground_speed>0 & wheel_rolling_4) | ground_speed=0)) <-> brake_as_cmd_4);
        	brake_as_cmd_5_valid:= (( electrical_pedal_pos_L & ((ground_speed>0 & wheel_rolling_5) | ground_speed=0)) <-> brake_as_cmd_5);
        	brake_as_cmd_6_valid:= (( electrical_pedal_pos_L & ((ground_speed>0 & wheel_rolling_6) | ground_speed=0)) <-> brake_as_cmd_6);
        	brake_as_cmd_7_valid:= (( electrical_pedal_pos_R & ((ground_speed>0 & wheel_rolling_7) | ground_speed=0)) <-> brake_as_cmd_7);
        	brake_as_cmd_8_valid:= (( electrical_pedal_pos_R & ((ground_speed>0 & wheel_rolling_8) | ground_speed=0)) <-> brake_as_cmd_8);


        ASSIGN
            bscu_validity := power 
            			& as_cmd_pair_1_5_valid 
            			& as_cmd_pair_2_6_valid 
            			& as_cmd_pair_3_7_valid 
            			& as_cmd_pair_4_8_valid 
            			& brake_as_cmd_1_valid 
            			& brake_as_cmd_2_valid 
            			& brake_as_cmd_3_valid 
            			& brake_as_cmd_4_valid 
            			& brake_as_cmd_5_valid 
            			& brake_as_cmd_6_valid
            			& brake_as_cmd_7_valid 
            			& brake_as_cmd_8_valid
            			;

    -- ===============================================================================
    --                               End of module
    -- ===============================================================================
